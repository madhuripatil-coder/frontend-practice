{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isSignUp, setisSignUp] = useState(false);\n  const [gender, setGender] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"login\"));\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues\n  } = useForm({});\n  const handleGenderChange = event => {\n    setGender(event.target.value);\n  };\n  const validateConfirmPassword = value => {\n    const {\n      password\n    } = getValues();\n    return value === password || \"Passwords do not match\";\n  };\n  const loginHandler = data => {\n    localStorage.setItem(\"login\", true);\n    setIsLoggedIn(true);\n    alert(\"Registered Successfully !!\");\n    navigate(\"/\");\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"login\");\n    setIsLoggedIn(false);\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: mystyle,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        borderStyle: \"solid\",\n        borderColor: \"blue\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\",\n        marginTop: 5,\n        maxWidth: 650,\n        padding: 3,\n        borderRadius: 5,\n        boxShadow: \"5px 5px 10px #ccc\",\n        sx: {\n          \":hover\": {\n            boxShadow: \"10px 10px 20px #ccc\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          padding: 3,\n          textAlign: \"center\",\n          children: \"You are already logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: logoutHandler,\n          sx: {\n            marginTop: 3,\n            borderRadius: 3\n          },\n          variant: \"contained\",\n          color: \"warning\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mystyle,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(loginHandler),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        borderStyle: \"solid\",\n        borderColor: \"blue\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\",\n        marginTop: 5,\n        maxWidth: 650,\n        padding: 3,\n        borderRadius: 5,\n        boxShadow: \"5px 5px 10px #ccc\",\n        sx: {\n          \":hover\": {\n            boxShadow: \"10px 10px 20px #ccc\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          padding: 3,\n          textAlign: \"center\",\n          children: isSignUp ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          name: \"username\",\n          ...register(\"username\", {\n            required: true,\n            minLength: 3\n          }),\n          variant: \"outlined\",\n          placeholder: \"Username\",\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Username is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), errors.username && errors.username.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Username should be at least 3 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          name: \"password\",\n          ...register(\"password\", {\n            required: true,\n            minLength: 6\n          }),\n          variant: \"outlined\",\n          placeholder: \"Password\",\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Password is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Password should be at least 6 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          sx: {\n            marginTop: 3,\n            borderRadius: 3\n          },\n          variant: \"contained\",\n          color: \"warning\",\n          children: isSignUp ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setisSignUp(!isSignUp),\n          sx: {\n            marginTop: 3,\n            borderRadius: 3\n          },\n          children: [\"Change to \", isSignUp ? \"Login\" : \"Sign Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/I54QfiSeHlzBDeHn3+troCd6MU=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   InputLabel,\n//   FormControl,\n//   FormLabel,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   Grid,\n//   Checkbox,\n//   FormGroup,\n// } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function Login() {\n//   const [isSignUp, setisSignUp] = useState(false);\n\n//   let login=localStorage.getItem(\"login\");\n\n//   const [gender, setGender] = useState(\"\");\n//   const navigate = useNavigate();\n//   const mystyle = {\n//     backgroundImage: \"url('backgroundimg.jpg')\",\n//     backgroundSize: \"cover\",\n//     minHeight: \"100vh\",\n//     width: \"100vw\",\n//     padding: \"50px\",\n//     backgroundRepeat: \"no-repeat\",\n//   };\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n\n//     getValues,\n//   } = useForm({});\n\n//   const handleGenderChange = (event) => {\n//     setGender(event.target.value);\n//   };\n\n//   const validateConfirmPassword = (value) => {\n//     const { password } = getValues();\n//     return value === password || \"Passwords do not match\";\n//   };\n//   const loginHandler = (data) => {\n//     localStorage.setItem(\"login\", true);\n//     // console.log(data);\n//     alert(\"Registered Successfully !!\");\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <div style={mystyle}>\n//       <form onSubmit={handleSubmit(loginHandler)}>\n//         <Box\n//           display={\"flex\"}\n//           border-style={\"solid\"}\n//           border-color={\"blue\"}\n//           flexDirection={\"column\"}\n//           alignItems={\"center\"}\n//           justifyContent={\"center\"}\n//           margin={\"auto\"}\n//           marginTop={5}\n//           maxWidth={650}\n//           padding={3}\n//           borderRadius={5}\n//           boxShadow={\"5px 5px 10px #ccc\"}\n//           sx={{\n//             \":hover\": {\n//               boxShadow: \"10px 10px 20px #ccc\",\n//             },\n//           }}\n//         >\n//           <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n//             {isSignUp ? \"SignUp\" : \"Login\"}\n//           </Typography>\n//           {isSignUp && (\n//             <>\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 sx={{ marginBottom: 1 }}\n//                 spacing={1}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 1 }}> UserName</InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"text\"\n//                       name=\"username\"\n//                       {...register(\"username\", {\n//                         required: true,\n//                         minLength: 3,\n//                       })}\n//                       variant=\"outlined\"\n//                       placeholder=\"UserName\"\n//                       fullWidth\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.username && errors.username.type === \"required\" && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -35,\n//                           left: 0,\n//                         }}\n//                       >\n//                         Username is required.\n//                       </p>\n//                     )}\n//                     {errors.username &&\n//                       errors.username.type === \"minLength\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Username should be at-least 3 characters.\n//                         </p>\n//                       )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <br />\n\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 1 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <FormLabel sx={{ marginBottom: 1 }}>Gender</FormLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <RadioGroup\n//                       row\n//                       value={gender}\n//                       controlId=\"gender\"\n//                       onChange={handleGenderChange}\n//                       sx={{ marginBottom: 0 }}\n//                     >\n//                       <FormControlLabel\n//                         value=\"female\"\n//                         control={<Radio />}\n//                         label=\"Female\"\n//                         {...register(\"gender\", {\n//                           required: \"Please select your gender\",\n//                         })}\n//                       />\n//                       <FormControlLabel\n//                         value=\"male\"\n//                         control={<Radio />}\n//                         label=\"Male\"\n//                         {...register(\"gender\")}\n//                       />\n//                       <FormControlLabel\n//                         value=\"other\"\n//                         control={<Radio />}\n//                         label=\"Other\"\n//                         {...register(\"gender\")}\n//                       />\n//                     </RadioGroup>\n//                     {errors.gender && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -30,\n//                           left: 0,\n//                         }}\n//                       >\n//                         {errors.gender.message}\n//                       </p>\n//                     )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 2 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 0 }}>\n//                     Date of Birth\n//                   </InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"date\"\n//                       name=\"dob\"\n//                       variant=\"outlined\"\n//                       fullWidth\n//                       {...register(\"dob\", {\n//                         required: \"DOB is required\",\n//                       })}\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.dob && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -30,\n//                           left: 0,\n//                         }}\n//                       >\n//                         {errors.dob.message}\n//                       </p>\n//                     )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <br />\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 0 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <FormLabel sx={{ marginBottom: 1 }}>Skills</FormLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\", margin: \"auto\" }}>\n//                     <FormControl component=\"fieldset\" controlId=\"skills\">\n//                       <FormGroup row>\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"JavaScript\"\n//                               {...register(\"skills\", {\n//                                 required: \"Please select at least one skill\",\n//                               })}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"JavaScript\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"React\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"React\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"Nodejs\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, marginbot: 0 }}\n//                             />\n//                           }\n//                           label=\"Nodejs\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"Angular\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"Angular\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                       </FormGroup>\n//                       {errors.skills && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -33,\n//                             left: 0,\n//                           }}\n//                         >\n//                           {errors.skills.message}\n//                         </p>\n//                       )}\n//                     </FormControl>\n//                   </div>\n//                 </Grid>\n//               </Grid>\n\n//               <br />\n\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 2 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 1 }}>Contact No</InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"tel\"\n//                       name=\"contactNo\"\n//                       {...register(\"contactNo\", {\n//                         required: true,\n//                         pattern: /^[0-9]{10}$/,\n//                       })}\n//                       variant=\"outlined\"\n//                       placeholder=\"Contact No\"\n//                       fullWidth\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.contactNo &&\n//                       errors.contactNo.type === \"required\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Contact number is required.\n//                         </p>\n//                       )}\n//                     {errors.contactNo &&\n//                       errors.contactNo.type === \"pattern\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Contact number should be exactly 10 digits.\n//                         </p>\n//                       )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//             </>\n//           )}\n//           <br />\n\n//           <Grid\n//             container\n//             alignItems=\"center\"\n//             spacing={2}\n//             sx={{ marginBottom: 1 }}\n//           >\n//             <Grid item xs={4}>\n//               <InputLabel sx={{ marginBottom: 0 }}>Email</InputLabel>\n//             </Grid>\n//             <Grid item xs={8}>\n//               <div style={{ position: \"relative\" }}>\n//                 <TextField\n//                   type=\"email\"\n//                   name=\"email\"\n//                   {...register(\"email\", {\n//                     required: true,\n//                     pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n//                   })}\n//                   variant=\"outlined\"\n//                   placeholder=\"Email\"\n//                   fullWidth\n//                   sx={{ marginBottom: 1 }}\n//                 />\n//                 {errors.email && errors.email.type === \"required\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Email is required.\n//                   </p>\n//                 )}\n//                 {errors.email && errors.email.type === \"pattern\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Email is not valid.\n//                   </p>\n//                 )}\n//               </div>\n//             </Grid>\n//           </Grid>\n//           <br />\n//           <Grid\n//             container\n//             alignItems=\"center\"\n//             spacing={2}\n//             sx={{ marginBottom: 1 }}\n//           >\n//             <Grid item xs={4}>\n//               <InputLabel sx={{ marginBottom: 0 }}>Password</InputLabel>\n//             </Grid>\n//             <Grid item xs={8}>\n//               <div style={{ position: \"relative\" }}>\n//                 <TextField\n//                   type=\"password\"\n//                   name=\"password\"\n//                   {...register(\"password\", {\n//                     required: true,\n//                     minLength: 6,\n//                   })}\n//                   variant=\"outlined\"\n//                   placeholder=\"Password\"\n//                   fullWidth\n//                   sx={{ marginBottom: 1 }}\n//                 />\n//                 {errors.password && errors.password.type === \"required\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Password is required.\n//                   </p>\n//                 )}\n//                 {errors.password && errors.password.type === \"minLength\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Password should be at-least 6 characters.\n//                   </p>\n//                 )}\n//               </div>\n//             </Grid>\n//           </Grid>\n//           <br />\n//           {isSignUp && (\n//             <Grid\n//               container\n//               alignItems=\"center\"\n//               sx={{ marginBottom: 2 }}\n//               spacing={1}\n//             >\n//               <Grid item xs={4}>\n//                 <InputLabel sx={{ marginBottom: 0 }}>\n//                   Confirm Password\n//                 </InputLabel>\n//               </Grid>\n//               <Grid item xs={8}>\n//                 <div style={{ position: \"relative\" }}>\n//                   <TextField\n//                     type=\"password\"\n//                     variant=\"outlined\"\n//                     name=\"confirmpassword\"\n//                     {...register(\"confirmpassword\", {\n//                       required: true,\n//                       validate: validateConfirmPassword,\n//                     })}\n//                     placeholder=\"Confirm Password\"\n//                     fullWidth\n//                   />\n//                   {errors.confirmpassword &&\n//                     errors.confirmpassword.type === \"required\" && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -35,\n//                           left: 0,\n//                         }}\n//                       >\n//                         ConfirmPassword is required.\n//                       </p>\n//                     )}\n//                   {errors.confirmpassword && (\n//                     <p\n//                       className=\"errorMsg\"\n//                       style={{\n//                         color: \"red\",\n//                         position: \"absolute\",\n//                         bottom: -35,\n//                         left: 0,\n//                       }}\n//                     >\n//                       {errors.confirmpassword.message}\n//                     </p>\n//                   )}\n//                 </div>\n//               </Grid>\n//             </Grid>\n//           )}\n//           <Button\n//             type=\"Submit\"\n//             sx={{ marginTop: 3, borderRadius: 3 }}\n//             variant=\"contained\"\n//             color=\"warning\"\n//           >\n//             {isSignUp ? \"Signup\" : \"Login\"}\n//           </Button>\n//           <Button\n//             onClick={() => setisSignUp(!isSignUp)}\n//             sx={{ marginTop: 3, borderRadius: 3 }}\n//           >\n//             Change To {isSignUp ? \"Login\" : \"Signup\"}\n//           </Button>\n//         </Box>\n//       </form>\n//     </div>\n//   );\n// }\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useForm","Box","Button","TextField","Typography","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","isSignUp","setisSignUp","gender","setGender","navigate","isLoggedIn","setIsLoggedIn","localStorage","getItem","mystyle","backgroundImage","backgroundSize","minHeight","width","padding","backgroundRepeat","register","handleSubmit","formState","errors","getValues","handleGenderChange","event","target","value","validateConfirmPassword","password","loginHandler","data","setItem","alert","logoutHandler","removeItem","style","children","display","borderStyle","borderColor","flexDirection","alignItems","justifyContent","margin","marginTop","maxWidth","borderRadius","boxShadow","sx","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","onSubmit","type","name","required","minLength","placeholder","fullWidth","marginBottom","username","className","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login() {\n  const [isSignUp, setisSignUp] = useState(false);\n  const [gender, setGender] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"login\"));\n\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n  } = useForm({});\n\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  const validateConfirmPassword = (value) => {\n    const { password } = getValues();\n    return value === password || \"Passwords do not match\";\n  };\n\n  const loginHandler = (data) => {\n    localStorage.setItem(\"login\", true);\n    setIsLoggedIn(true);\n    alert(\"Registered Successfully !!\");\n    navigate(\"/\");\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"login\");\n    setIsLoggedIn(false);\n  };\n\n  if (isLoggedIn) {\n    return (\n      <div style={mystyle}>\n        <Box\n          display={\"flex\"}\n          borderStyle={\"solid\"}\n          borderColor={\"blue\"}\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          margin={\"auto\"}\n          marginTop={5}\n          maxWidth={650}\n          padding={3}\n          borderRadius={5}\n          boxShadow={\"5px 5px 10px #ccc\"}\n          sx={{\n            \":hover\": {\n              boxShadow: \"10px 10px 20px #ccc\",\n            },\n          }}\n        >\n          <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n            You are already logged in.\n          </Typography>\n          <Button\n            onClick={logoutHandler}\n            sx={{ marginTop: 3, borderRadius: 3 }}\n            variant=\"contained\"\n            color=\"warning\"\n          >\n            Logout\n          </Button>\n        </Box>\n      </div>\n    );\n  }\n\n  return (\n    <div style={mystyle}>\n      <form onSubmit={handleSubmit(loginHandler)}>\n        <Box\n          display={\"flex\"}\n          borderStyle={\"solid\"}\n          borderColor={\"blue\"}\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          margin={\"auto\"}\n          marginTop={5}\n          maxWidth={650}\n          padding={3}\n          borderRadius={5}\n          boxShadow={\"5px 5px 10px #ccc\"}\n          sx={{\n            \":hover\": {\n              boxShadow: \"10px 10px 20px #ccc\",\n            },\n          }}\n        >\n          <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n            {isSignUp ? \"Sign Up\" : \"Login\"}\n          </Typography>\n          {isSignUp && (\n            <>\n              {/* Sign up fields */}\n              {/* ... */}\n            </>\n          )}\n          {/* Login fields */}\n          <TextField\n            type=\"text\"\n            name=\"username\"\n            {...register(\"username\", {\n              required: true,\n              minLength: 3,\n            })}\n            variant=\"outlined\"\n            placeholder=\"Username\"\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n          {errors.username && errors.username.type === \"required\" && (\n            <p className=\"errorMsg\" style={{ color: \"red\" }}>\n              Username is required.\n            </p>\n          )}\n          {errors.username && errors.username.type === \"minLength\" && (\n            <p className=\"errorMsg\" style={{ color: \"red\" }}>\n              Username should be at least 3 characters.\n            </p>\n          )}\n\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            {...register(\"password\", {\n              required: true,\n              minLength: 6,\n            })}\n            variant=\"outlined\"\n            placeholder=\"Password\"\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n          {errors.password && errors.password.type === \"required\" && (\n            <p className=\"errorMsg\" style={{ color: \"red\" }}>\n              Password is required.\n            </p>\n          )}\n          {errors.password && errors.password.type === \"minLength\" && (\n            <p className=\"errorMsg\" style={{ color: \"red\" }}>\n              Password should be at least 6 characters.\n            </p>\n          )}\n\n          <Button\n            type=\"submit\"\n            sx={{ marginTop: 3, borderRadius: 3 }}\n            variant=\"contained\"\n            color=\"warning\"\n          >\n            {isSignUp ? \"Sign Up\" : \"Login\"}\n          </Button>\n          <Button\n            onClick={() => setisSignUp(!isSignUp)}\n            sx={{ marginTop: 3, borderRadius: 3 }}\n          >\n            Change to {isSignUp ? \"Login\" : \"Sign Up\"}\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n\n// import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   InputLabel,\n//   FormControl,\n//   FormLabel,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   Grid,\n//   Checkbox,\n//   FormGroup,\n// } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function Login() {\n//   const [isSignUp, setisSignUp] = useState(false);\n\n//   let login=localStorage.getItem(\"login\");\n\n//   const [gender, setGender] = useState(\"\");\n//   const navigate = useNavigate();\n//   const mystyle = {\n//     backgroundImage: \"url('backgroundimg.jpg')\",\n//     backgroundSize: \"cover\",\n//     minHeight: \"100vh\",\n//     width: \"100vw\",\n//     padding: \"50px\",\n//     backgroundRepeat: \"no-repeat\",\n//   };\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n\n//     getValues,\n//   } = useForm({});\n\n//   const handleGenderChange = (event) => {\n//     setGender(event.target.value);\n//   };\n\n//   const validateConfirmPassword = (value) => {\n//     const { password } = getValues();\n//     return value === password || \"Passwords do not match\";\n//   };\n//   const loginHandler = (data) => {\n//     localStorage.setItem(\"login\", true);\n//     // console.log(data);\n//     alert(\"Registered Successfully !!\");\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <div style={mystyle}>\n//       <form onSubmit={handleSubmit(loginHandler)}>\n//         <Box\n//           display={\"flex\"}\n//           border-style={\"solid\"}\n//           border-color={\"blue\"}\n//           flexDirection={\"column\"}\n//           alignItems={\"center\"}\n//           justifyContent={\"center\"}\n//           margin={\"auto\"}\n//           marginTop={5}\n//           maxWidth={650}\n//           padding={3}\n//           borderRadius={5}\n//           boxShadow={\"5px 5px 10px #ccc\"}\n//           sx={{\n//             \":hover\": {\n//               boxShadow: \"10px 10px 20px #ccc\",\n//             },\n//           }}\n//         >\n//           <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n//             {isSignUp ? \"SignUp\" : \"Login\"}\n//           </Typography>\n//           {isSignUp && (\n//             <>\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 sx={{ marginBottom: 1 }}\n//                 spacing={1}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 1 }}> UserName</InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"text\"\n//                       name=\"username\"\n//                       {...register(\"username\", {\n//                         required: true,\n//                         minLength: 3,\n//                       })}\n//                       variant=\"outlined\"\n//                       placeholder=\"UserName\"\n//                       fullWidth\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.username && errors.username.type === \"required\" && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -35,\n//                           left: 0,\n//                         }}\n//                       >\n//                         Username is required.\n//                       </p>\n//                     )}\n//                     {errors.username &&\n//                       errors.username.type === \"minLength\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Username should be at-least 3 characters.\n//                         </p>\n//                       )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <br />\n\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 1 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <FormLabel sx={{ marginBottom: 1 }}>Gender</FormLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <RadioGroup\n//                       row\n//                       value={gender}\n//                       controlId=\"gender\"\n//                       onChange={handleGenderChange}\n//                       sx={{ marginBottom: 0 }}\n//                     >\n//                       <FormControlLabel\n//                         value=\"female\"\n//                         control={<Radio />}\n//                         label=\"Female\"\n//                         {...register(\"gender\", {\n//                           required: \"Please select your gender\",\n//                         })}\n//                       />\n//                       <FormControlLabel\n//                         value=\"male\"\n//                         control={<Radio />}\n//                         label=\"Male\"\n//                         {...register(\"gender\")}\n//                       />\n//                       <FormControlLabel\n//                         value=\"other\"\n//                         control={<Radio />}\n//                         label=\"Other\"\n//                         {...register(\"gender\")}\n//                       />\n//                     </RadioGroup>\n//                     {errors.gender && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -30,\n//                           left: 0,\n//                         }}\n//                       >\n//                         {errors.gender.message}\n//                       </p>\n//                     )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 2 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 0 }}>\n//                     Date of Birth\n//                   </InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"date\"\n//                       name=\"dob\"\n//                       variant=\"outlined\"\n//                       fullWidth\n//                       {...register(\"dob\", {\n//                         required: \"DOB is required\",\n//                       })}\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.dob && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -30,\n//                           left: 0,\n//                         }}\n//                       >\n//                         {errors.dob.message}\n//                       </p>\n//                     )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//               <br />\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 0 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <FormLabel sx={{ marginBottom: 1 }}>Skills</FormLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\", margin: \"auto\" }}>\n//                     <FormControl component=\"fieldset\" controlId=\"skills\">\n//                       <FormGroup row>\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"JavaScript\"\n//                               {...register(\"skills\", {\n//                                 required: \"Please select at least one skill\",\n//                               })}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"JavaScript\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"React\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"React\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"Nodejs\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, marginbot: 0 }}\n//                             />\n//                           }\n//                           label=\"Nodejs\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                         <FormControlLabel\n//                           control={\n//                             <Checkbox\n//                               value=\"Angular\"\n//                               {...register(\"skills\")}\n//                               sx={{ padding: 0, margin: 0 }}\n//                             />\n//                           }\n//                           label=\"Angular\"\n//                           sx={{ marginLeft: 0 }}\n//                         />\n//                       </FormGroup>\n//                       {errors.skills && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -33,\n//                             left: 0,\n//                           }}\n//                         >\n//                           {errors.skills.message}\n//                         </p>\n//                       )}\n//                     </FormControl>\n//                   </div>\n//                 </Grid>\n//               </Grid>\n\n//               <br />\n\n//               <Grid\n//                 container\n//                 alignItems=\"center\"\n//                 spacing={2}\n//                 sx={{ marginBottom: 2 }}\n//               >\n//                 <Grid item xs={4}>\n//                   <InputLabel sx={{ marginBottom: 1 }}>Contact No</InputLabel>\n//                 </Grid>\n//                 <Grid item xs={8}>\n//                   <div style={{ position: \"relative\" }}>\n//                     <TextField\n//                       type=\"tel\"\n//                       name=\"contactNo\"\n//                       {...register(\"contactNo\", {\n//                         required: true,\n//                         pattern: /^[0-9]{10}$/,\n//                       })}\n//                       variant=\"outlined\"\n//                       placeholder=\"Contact No\"\n//                       fullWidth\n//                       sx={{ marginBottom: 0 }}\n//                     />\n//                     {errors.contactNo &&\n//                       errors.contactNo.type === \"required\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Contact number is required.\n//                         </p>\n//                       )}\n//                     {errors.contactNo &&\n//                       errors.contactNo.type === \"pattern\" && (\n//                         <p\n//                           className=\"errorMsg\"\n//                           style={{\n//                             color: \"red\",\n//                             position: \"absolute\",\n//                             bottom: -35,\n//                             left: 0,\n//                           }}\n//                         >\n//                           Contact number should be exactly 10 digits.\n//                         </p>\n//                       )}\n//                   </div>\n//                 </Grid>\n//               </Grid>\n//             </>\n//           )}\n//           <br />\n\n//           <Grid\n//             container\n//             alignItems=\"center\"\n//             spacing={2}\n//             sx={{ marginBottom: 1 }}\n//           >\n//             <Grid item xs={4}>\n//               <InputLabel sx={{ marginBottom: 0 }}>Email</InputLabel>\n//             </Grid>\n//             <Grid item xs={8}>\n//               <div style={{ position: \"relative\" }}>\n//                 <TextField\n//                   type=\"email\"\n//                   name=\"email\"\n//                   {...register(\"email\", {\n//                     required: true,\n//                     pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n//                   })}\n//                   variant=\"outlined\"\n//                   placeholder=\"Email\"\n//                   fullWidth\n//                   sx={{ marginBottom: 1 }}\n//                 />\n//                 {errors.email && errors.email.type === \"required\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Email is required.\n//                   </p>\n//                 )}\n//                 {errors.email && errors.email.type === \"pattern\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Email is not valid.\n//                   </p>\n//                 )}\n//               </div>\n//             </Grid>\n//           </Grid>\n//           <br />\n//           <Grid\n//             container\n//             alignItems=\"center\"\n//             spacing={2}\n//             sx={{ marginBottom: 1 }}\n//           >\n//             <Grid item xs={4}>\n//               <InputLabel sx={{ marginBottom: 0 }}>Password</InputLabel>\n//             </Grid>\n//             <Grid item xs={8}>\n//               <div style={{ position: \"relative\" }}>\n//                 <TextField\n//                   type=\"password\"\n//                   name=\"password\"\n//                   {...register(\"password\", {\n//                     required: true,\n//                     minLength: 6,\n//                   })}\n//                   variant=\"outlined\"\n//                   placeholder=\"Password\"\n//                   fullWidth\n//                   sx={{ marginBottom: 1 }}\n//                 />\n//                 {errors.password && errors.password.type === \"required\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Password is required.\n//                   </p>\n//                 )}\n//                 {errors.password && errors.password.type === \"minLength\" && (\n//                   <p\n//                     className=\"errorMsg\"\n//                     style={{\n//                       color: \"red\",\n//                       position: \"absolute\",\n//                       bottom: -33,\n//                       left: 0,\n//                     }}\n//                   >\n//                     Password should be at-least 6 characters.\n//                   </p>\n//                 )}\n//               </div>\n//             </Grid>\n//           </Grid>\n//           <br />\n//           {isSignUp && (\n//             <Grid\n//               container\n//               alignItems=\"center\"\n//               sx={{ marginBottom: 2 }}\n//               spacing={1}\n//             >\n//               <Grid item xs={4}>\n//                 <InputLabel sx={{ marginBottom: 0 }}>\n//                   Confirm Password\n//                 </InputLabel>\n//               </Grid>\n//               <Grid item xs={8}>\n//                 <div style={{ position: \"relative\" }}>\n//                   <TextField\n//                     type=\"password\"\n//                     variant=\"outlined\"\n//                     name=\"confirmpassword\"\n//                     {...register(\"confirmpassword\", {\n//                       required: true,\n//                       validate: validateConfirmPassword,\n//                     })}\n//                     placeholder=\"Confirm Password\"\n//                     fullWidth\n//                   />\n//                   {errors.confirmpassword &&\n//                     errors.confirmpassword.type === \"required\" && (\n//                       <p\n//                         className=\"errorMsg\"\n//                         style={{\n//                           color: \"red\",\n//                           position: \"absolute\",\n//                           bottom: -35,\n//                           left: 0,\n//                         }}\n//                       >\n//                         ConfirmPassword is required.\n//                       </p>\n//                     )}\n//                   {errors.confirmpassword && (\n//                     <p\n//                       className=\"errorMsg\"\n//                       style={{\n//                         color: \"red\",\n//                         position: \"absolute\",\n//                         bottom: -35,\n//                         left: 0,\n//                       }}\n//                     >\n//                       {errors.confirmpassword.message}\n//                     </p>\n//                   )}\n//                 </div>\n//               </Grid>\n//             </Grid>\n//           )}\n//           <Button\n//             type=\"Submit\"\n//             sx={{ marginTop: 3, borderRadius: 3 }}\n//             variant=\"contained\"\n//             color=\"warning\"\n//           >\n//             {isSignUp ? \"Signup\" : \"Login\"}\n//           </Button>\n//           <Button\n//             onClick={() => setisSignUp(!isSignUp)}\n//             sx={{ marginTop: 3, borderRadius: 3 }}\n//           >\n//             Change To {isSignUp ? \"Login\" : \"Signup\"}\n//           </Button>\n//         </Box>\n//       </form>\n//     </div>\n//   );\n// }\n// export default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}