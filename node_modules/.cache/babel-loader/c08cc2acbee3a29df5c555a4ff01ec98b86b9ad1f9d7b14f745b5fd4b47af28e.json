{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/UseEffectExample.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UseEffectExample() {\n  _s();\n  const [count, setcounter] = useState(0);\n  const [count1, setCount1] = useState(100);\n  useEffect(() => {\n    console.log(\"useEffect called with every render\");\n  });\n  useEffect(() => {\n    console.log(\"component is mounting just once\");\n  }, []);\n  useEffect(() => {\n    console.log(\"Second count got updated\");\n  }, [count1]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UseEffect Example in Function Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Updated Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setcounter(count + 1);\n      },\n      children: \"Update Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Updated second count:\", count1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount1(count1 + 2);\n      },\n      children: \"Update second count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UseEffectExample, \"mGKh8vZWKFTI0c/byCLOVmdwG9A=\");\n_c = UseEffectExample;\nvar _c;\n$RefreshReg$(_c, \"UseEffectExample\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UseEffectExample","_s","count","setcounter","count1","setCount1","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/UseEffectExample.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function UseEffectExample() {\n  const [count, setcounter] = useState(0);\n  const [count1, setCount1] = useState(100);\n\n  useEffect(() => {\n    console.log(\"useEffect called with every render\");\n  });\n\n  useEffect(() => {\n    console.log(\"component is mounting just once\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Second count got updated\");\n  }, [count1]);\n\n  return (\n    <>\n      <h1>UseEffect Example in Function Component</h1>\n      <h2>Updated Count: {count}</h2>\n      <button\n        onClick={() => {\n          setcounter(count + 1);\n        }}\n      >\n        Update Count\n      </button>\n      <h2>Updated second count:{count1}</h2>\n      <button\n        onClick={() => {\n          setCount1(count1 + 2);\n        }}\n      >\n        Update second count\n      </button>\n      <br />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EACnD,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACzC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDf,OAAA;MAAAW,QAAA,GAAI,iBAAe,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/Bf,OAAA;MACEgB,OAAO,EAAEA,CAAA,KAAM;QACbV,UAAU,CAACD,KAAK,GAAG,CAAC,CAAC;MACvB,CAAE;MAAAM,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTf,OAAA;MAAAW,QAAA,GAAI,uBAAqB,EAACJ,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCf,OAAA;MACEgB,OAAO,EAAEA,CAAA,KAAM;QACbR,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;MACvB,CAAE;MAAAI,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAEP;AAACX,EAAA,CAtCuBD,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}