{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(sessionStorage.getItem(\"login\") === \"true\");\n  const navigate = useNavigate();\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const loginHandler = async data => {\n    try {\n      const result = await axios.post(\"http://localhost:5000/login\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"result from login\", result);\n      if (result.data) {\n        sessionStorage.setItem(\"login\", \"true\");\n        sessionStorage.setItem(\"user\", result.data.user);\n        sessionStorage.setItem(\"accessToken\", result.data.accessToken);\n        sessionStorage.setItem(\"refreshToken\", result.data.refreshToken);\n        // let sessionToken = sessionStorage.getItem(\"Token\");\n        // let sessionToken = result.data.accessToken;\n        //console.log(\"sessionToken:\", sessionToken);\n        // await getData(sessionToken);\n        alert(\"Logged in Successfully!!\");\n        setIsLoggedIn(true);\n        navigate(\"/\");\n      } else {\n        alert(\"Login failed, please check your credentials.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  // useEffect(() => {\n  //   // Get data using fetch method\n  //   // fetch(\"http://localhost:5000/\")\n  //   //   .then((response) => response.json())\n  //   //   .then((data) => console.log(data));\n  //   // Get data using axios\n  //   // const data = axios\n  //   //   .get(\"http://localhost:5000/\")\n  //   //   .then((res) => console.log(res.data));\n  //   // console.log(\"data\", data);\n  //   // console.log(\"data\", data);\n\n  //   console.log(\"sessionToken\", sessionToken);\n  //   getData();\n  // }, [sessionToken]);\n\n  // const refreshToken = async () => {\n  //   console.log(\"Attempting to refresh token\");\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n\n  //     if (response.data.accessToken) {\n  //       sessionStorage.setItem(\"accessToken\", response.data.accessToken);\n  //       console.log(\"New access token set:\", response.data.accessToken);\n  //     } else {\n  //       console.error(\"No access token returned. Logging out.\");\n  //       handleLogout();\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to refresh token\", error);\n  //     handleLogout(); // Optionally log out the user if the token can't be refreshed.\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n\n  //   return () => clearInterval(interval);\n  // }, []); // Removed `isLoggedIn` dependency to avoid unnecessary re-runs\n\n  // const refreshToken = async () => {\n  //   console.log(\"refreshToken function is called\");\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n  //     if (response.data.accessToken) {\n  //       sessionStorage.setItem(\"accessToken\", response.data.accessToken);\n  //       console.log(\"New access token set:\", response.data.accessToken);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to refresh token\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   //console.log(\"Setting up refresh token interval\");\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  // useEffect(() => {\n  //   if (isLoggedIn) {\n  //     console.log(\"Setting up refresh token interval\");\n\n  //     const interval = setInterval(() => {\n  //       console.log(\"Refreshing token...\");\n  //       refreshToken();\n  //     }, 1 * 60 * 1000);\n\n  //     return () => {\n  //       console.log(\"Clearing refresh token interval\");\n  //       clearInterval(interval);\n  //     };\n  //   }\n  // }, [isLoggedIn]);\n\n  let sessionToken = sessionStorage.getItem(\"token\");\n  useEffect(() => {\n    console.log(\"sessionToken\", sessionToken);\n    getData();\n  }, [sessionToken]);\n  const getData = async sessionToken => {\n    try {\n      const result = await axios.get(\"http://localhost:5000/getData\", {\n        headers: {\n          authorization: `Bearer ${sessionToken}`\n        }\n      });\n      console.log(\"result from getData\", result.data);\n    } catch (error) {\n      console.error(\"Failed to get data\", error);\n    }\n  };\n  const refreshToken = async () => {\n    try {\n      const responce = await axios.post(\"http://127.0.0.1:5000/refresh\", {\n        refreshToken: sessionStorage.getItem(\"refreshToken\")\n      });\n      sessionStorage.setItem(\"token\", responce.data.accessToken);\n    } catch (error) {\n      console.error(\"failed to fetch token\", error);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 1 * 60 * 1000);\n  });\n\n  // const refreshToken = async () => {\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n  //     sessionStorage.setItem(\"token\", response.data.accessToken);\n  //   } catch (error) {\n  //     console.error(\"Failed to fetch token\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   console.log(\"useeffect called\");\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  const handleLogout = () => {\n    console.log(\"Logging out due to failed token refresh\");\n    sessionStorage.removeItem(\"login\");\n    sessionStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"refreshToken\");\n    sessionStorage.removeItem(\"accessToken\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n    alert(\"Session expired. Please log in again.\");\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: mystyle,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\",\n        marginTop: 5,\n        maxWidth: 650,\n        padding: 3,\n        borderRadius: 5,\n        boxShadow: \"5px 5px 10px #ccc\",\n        sx: {\n          \":hover\": {\n            boxShadow: \"10px 10px 20px #ccc\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          padding: 3,\n          textAlign: \"center\",\n          children: \"You are Already logged in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogout,\n          sx: {\n            marginTop: 3,\n            borderRadius: 3\n          },\n          variant: \"contained\",\n          color: \"warning\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: mystyle,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(loginHandler),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \"auto\",\n          marginTop: 5,\n          maxWidth: 650,\n          padding: 3,\n          borderRadius: 5,\n          boxShadow: \"5px 5px 10px #ccc\",\n          sx: {\n            \":hover\": {\n              boxShadow: \"10px 10px 20px #ccc\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            padding: 3,\n            textAlign: \"center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            sx: {\n              marginBottom: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                type: \"email\",\n                style: {\n                  background: \"transparent\"\n                },\n                name: \"email\",\n                ...register(\"email\", {\n                  required: true\n                }),\n                variant: \"outlined\",\n                placeholder: \"Email\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"Email is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            spacing: 2,\n            sx: {\n              marginBottom: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                type: \"password\",\n                name: \"password\",\n                ...register(\"password\", {\n                  required: true,\n                  minLength: 6\n                }),\n                variant: \"outlined\",\n                placeholder: \"Password\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"Password is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"Password should be at least 6 characters.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            sx: {\n              marginTop: 3,\n              borderRadius: 3\n            },\n            variant: \"contained\",\n            color: \"warning\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              marginTop: 3,\n              borderRadius: 3\n            },\n            variant: \"contained\",\n            color: \"warning\",\n            onClick: () => navigate(\"/register\"),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Login, \"S+J8dzm20EP6mo8XbJf0L+Y9AzI=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useForm","Box","Button","TextField","Typography","Grid","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","isLoggedIn","setIsLoggedIn","sessionStorage","getItem","navigate","mystyle","backgroundImage","backgroundSize","minHeight","width","padding","backgroundRepeat","register","handleSubmit","formState","errors","loginHandler","data","result","post","headers","console","log","setItem","user","accessToken","refreshToken","alert","error","sessionToken","getData","get","authorization","responce","interval","setInterval","handleLogout","removeItem","style","children","display","flexDirection","alignItems","justifyContent","margin","marginTop","maxWidth","borderRadius","boxShadow","sx","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","onSubmit","container","spacing","marginBottom","item","xs","type","background","name","required","placeholder","fullWidth","email","className","minLength","password","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Login() {\n  const [isLoggedIn, setIsLoggedIn] = useState(\n    sessionStorage.getItem(\"login\") === \"true\"\n  );\n  const navigate = useNavigate();\n\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const loginHandler = async (data) => {\n    try {\n      const result = await axios.post(\"http://localhost:5000/login\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"result from login\", result);\n      if (result.data) {\n        sessionStorage.setItem(\"login\", \"true\");\n        sessionStorage.setItem(\"user\", result.data.user);\n        sessionStorage.setItem(\"accessToken\", result.data.accessToken);\n        sessionStorage.setItem(\"refreshToken\", result.data.refreshToken);\n        // let sessionToken = sessionStorage.getItem(\"Token\");\n        // let sessionToken = result.data.accessToken;\n        //console.log(\"sessionToken:\", sessionToken);\n        // await getData(sessionToken);\n        alert(\"Logged in Successfully!!\");\n        setIsLoggedIn(true);\n        navigate(\"/\");\n      } else {\n        alert(\"Login failed, please check your credentials.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  // useEffect(() => {\n  //   // Get data using fetch method\n  //   // fetch(\"http://localhost:5000/\")\n  //   //   .then((response) => response.json())\n  //   //   .then((data) => console.log(data));\n  //   // Get data using axios\n  //   // const data = axios\n  //   //   .get(\"http://localhost:5000/\")\n  //   //   .then((res) => console.log(res.data));\n  //   // console.log(\"data\", data);\n  //   // console.log(\"data\", data);\n\n  //   console.log(\"sessionToken\", sessionToken);\n  //   getData();\n  // }, [sessionToken]);\n\n  // const refreshToken = async () => {\n  //   console.log(\"Attempting to refresh token\");\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n\n  //     if (response.data.accessToken) {\n  //       sessionStorage.setItem(\"accessToken\", response.data.accessToken);\n  //       console.log(\"New access token set:\", response.data.accessToken);\n  //     } else {\n  //       console.error(\"No access token returned. Logging out.\");\n  //       handleLogout();\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to refresh token\", error);\n  //     handleLogout(); // Optionally log out the user if the token can't be refreshed.\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n\n  //   return () => clearInterval(interval);\n  // }, []); // Removed `isLoggedIn` dependency to avoid unnecessary re-runs\n\n  // const refreshToken = async () => {\n  //   console.log(\"refreshToken function is called\");\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n  //     if (response.data.accessToken) {\n  //       sessionStorage.setItem(\"accessToken\", response.data.accessToken);\n  //       console.log(\"New access token set:\", response.data.accessToken);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Failed to refresh token\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   //console.log(\"Setting up refresh token interval\");\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  // useEffect(() => {\n  //   if (isLoggedIn) {\n  //     console.log(\"Setting up refresh token interval\");\n\n  //     const interval = setInterval(() => {\n  //       console.log(\"Refreshing token...\");\n  //       refreshToken();\n  //     }, 1 * 60 * 1000);\n\n  //     return () => {\n  //       console.log(\"Clearing refresh token interval\");\n  //       clearInterval(interval);\n  //     };\n  //   }\n  // }, [isLoggedIn]);\n\n  let sessionToken = sessionStorage.getItem(\"token\");\n  useEffect(() => {\n    console.log(\"sessionToken\", sessionToken);\n    getData();\n  }, [sessionToken]);\n\n  const getData = async (sessionToken) => {\n    try {\n      const result = await axios.get(\"http://localhost:5000/getData\", {\n        headers: {\n          authorization: `Bearer ${sessionToken}`,\n        },\n      });\n      console.log(\"result from getData\", result.data);\n    } catch (error) {\n      console.error(\"Failed to get data\", error);\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const responce = await axios.post(\"http://127.0.0.1:5000/refresh\", {\n        refreshToken: sessionStorage.getItem(\"refreshToken\"),\n      });\n      sessionStorage.setItem(\"token\", responce.data.accessToken);\n    } catch (error) {\n      console.error(\"failed to fetch token\", error);\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshToken();\n    }, 1 * 60 * 1000);\n  });\n\n  // const refreshToken = async () => {\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5000/refresh\", {\n  //       refreshToken: sessionStorage.getItem(\"refreshToken\"),\n  //     });\n  //     sessionStorage.setItem(\"token\", response.data.accessToken);\n  //   } catch (error) {\n  //     console.error(\"Failed to fetch token\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   console.log(\"useeffect called\");\n  //   const interval = setInterval(() => {\n  //     refreshToken();\n  //   }, 1 * 60 * 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  const handleLogout = () => {\n    console.log(\"Logging out due to failed token refresh\");\n    sessionStorage.removeItem(\"login\");\n    sessionStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"refreshToken\");\n    sessionStorage.removeItem(\"accessToken\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n    alert(\"Session expired. Please log in again.\");\n  };\n\n  if (isLoggedIn) {\n    return (\n      <div style={mystyle}>\n        <Box\n          display={\"flex\"}\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          margin={\"auto\"}\n          marginTop={5}\n          maxWidth={650}\n          padding={3}\n          borderRadius={5}\n          boxShadow={\"5px 5px 10px #ccc\"}\n          sx={{\n            \":hover\": {\n              boxShadow: \"10px 10px 20px #ccc\",\n            },\n          }}\n        >\n          <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n            You are Already logged in!\n          </Typography>\n          <Button\n            onClick={handleLogout}\n            sx={{ marginTop: 3, borderRadius: 3 }}\n            variant=\"contained\"\n            color=\"warning\"\n          >\n            Logout\n          </Button>\n        </Box>\n      </div>\n    );\n  } else {\n    return (\n      <div style={mystyle}>\n        <form onSubmit={handleSubmit(loginHandler)}>\n          <Box\n            display={\"flex\"}\n            flexDirection={\"column\"}\n            alignItems={\"center\"}\n            justifyContent={\"center\"}\n            margin={\"auto\"}\n            marginTop={5}\n            maxWidth={650}\n            padding={3}\n            borderRadius={5}\n            boxShadow={\"5px 5px 10px #ccc\"}\n            sx={{\n              \":hover\": {\n                boxShadow: \"10px 10px 20px #ccc\",\n              },\n            }}\n          >\n            <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n              Login\n            </Typography>\n\n            <Grid\n              container\n              alignItems=\"center\"\n              spacing={2}\n              sx={{ marginBottom: 1 }}\n            >\n              <Grid item xs={4}>\n                <Typography variant=\"body1\">Email</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  type=\"email\"\n                  style={{ background: \"transparent\" }}\n                  name=\"email\"\n                  {...register(\"email\", { required: true })}\n                  variant=\"outlined\"\n                  placeholder=\"Email\"\n                  fullWidth\n                />\n                {errors.email && errors.email.type === \"required\" && (\n                  <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                    Email is required.\n                  </p>\n                )}\n              </Grid>\n            </Grid>\n\n            <Grid\n              container\n              alignItems=\"center\"\n              spacing={2}\n              sx={{ marginBottom: 1 }}\n            >\n              <Grid item xs={4}>\n                <Typography variant=\"body1\">Password</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  {...register(\"password\", { required: true, minLength: 6 })}\n                  variant=\"outlined\"\n                  placeholder=\"Password\"\n                  fullWidth\n                />\n                {errors.password && errors.password.type === \"required\" && (\n                  <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                    Password is required.\n                  </p>\n                )}\n                {errors.password && errors.password.type === \"minLength\" && (\n                  <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                    Password should be at least 6 characters.\n                  </p>\n                )}\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              sx={{ marginTop: 3, borderRadius: 3 }}\n              variant=\"contained\"\n              color=\"warning\"\n            >\n              Login\n            </Button>\n            <Button\n              sx={{ marginTop: 3, borderRadius: 3 }}\n              variant=\"contained\"\n              color=\"warning\"\n              onClick={() => navigate(\"/register\")}\n            >\n              Register\n            </Button>\n          </Box>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}