{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Cart.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    height: \"93vh\",\n    padding: \"50px\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mystyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.Image,\n              alt: item.Name,\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Weight: \", item.Weight]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", item.Price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => removeFromCart(item),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [\"Total: $\", calculateTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cart","mystyle","backgroundImage","height","padding","backgroundSize","backgroundRepeat","style","children","fileName","_jsxFileName","lineNumber","columnNumber","cartItems","length","Typography","variant","Grid","container","spacing","map","item","index","xs","Item","src","Image","alt","Name","width","Weight","Price","Button","color","onClick","removeFromCart","marginTop","calculateTotal","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Cart.js"],"sourcesContent":["import React from \"react\";\n\nconst Cart = () => {\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    height: \"93vh\",\n    padding: \"50px\",\n\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n  return (\n    <div style={mystyle}>\n      <h1>Cart Details</h1>\n      <div>\n        <h2>Shopping Cart</h2>\n        {cartItems.length === 0 ? (\n          <Typography variant=\"subtitle1\">Your cart is empty.</Typography>\n        ) : (\n          <Grid container spacing={2}>\n            {cartItems.map((item, index) => (\n              <Grid item xs={12} key={index}>\n                <Item>\n                  <img\n                    src={item.Image}\n                    alt={item.Name}\n                    style={{ width: \"100%\" }}\n                  />\n                  <h3>{item.Name}</h3>\n                  <p>Weight: {item.Weight}</p>\n                  <p>Price: {item.Price}</p>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => removeFromCart(item)}\n                  >\n                    Remove\n                  </Button>\n                </Item>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\n          Total: ${calculateTotal()}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}