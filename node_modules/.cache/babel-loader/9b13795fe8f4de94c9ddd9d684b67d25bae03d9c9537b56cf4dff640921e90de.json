{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/CounterContext/CounterContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport NestedCounter from \"./NestedCounter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const counter = /*#__PURE__*/createContext();\nconst CounterContext = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const onIncrement = () => {\n    setCount(count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter From useContext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(counter.Provider, {\n      value: {\n        count,\n        onIncrement\n      },\n      children: /*#__PURE__*/_jsxDEV(NestedCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterContext, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = CounterContext;\nexport default CounterContext;\nvar _c;\n$RefreshReg$(_c, \"CounterContext\");","map":{"version":3,"names":["React","createContext","useState","NestedCounter","jsxDEV","_jsxDEV","counter","CounterContext","_s","count","setCount","onIncrement","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/CounterContext/CounterContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport NestedCounter from \"./NestedCounter\";\nexport const counter = createContext();\nconst CounterContext = () => {\n  const [count, setCount] = useState(0);\n\n  const onIncrement = () => {\n    setCount(count + 1);\n  };\n  return (\n    <div>\n      <h1>Counter From useContext</h1>\n      <h3>Count:{count}</h3>\n      <counter.Provider value={{ count, onIncrement }}>\n        <NestedCounter />\n      </counter.Provider>\n    </div>\n  );\n};\n\nexport default CounterContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,OAAO,MAAMC,OAAO,gBAAGL,aAAa,CAAC,CAAC;AACtC,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD,oBACEJ,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCX,OAAA;MAAAO,QAAA,GAAI,QAAM,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBX,OAAA,CAACC,OAAO,CAACW,QAAQ;MAACC,KAAK,EAAE;QAAET,KAAK;QAAEE;MAAY,CAAE;MAAAC,QAAA,eAC9CP,OAAA,CAACF,aAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACR,EAAA,CAfID,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}