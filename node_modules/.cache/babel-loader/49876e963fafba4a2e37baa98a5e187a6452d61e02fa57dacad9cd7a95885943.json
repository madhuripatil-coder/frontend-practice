{"ast":null,"code":"var _jsxFileName = \"/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n//import { RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  const [gender, setGender] = useState(\"\");\n  const navigate = useNavigate();\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\"\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues\n  } = useForm({});\n  const handleGenderChange = event => {\n    setGender(event.target.value);\n  };\n  const validateConfirmPassword = value => {\n    const {\n      password\n    } = getValues();\n    return value === password || \"Passwords do not match\";\n  };\n  const registerHandler = data => {\n    // Perform registration logic here (e.g., API call)\n    alert(\"Registered Successfully!!\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mystyle,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(registerHandler),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        borderStyle: \"solid\",\n        borderColor: \"blue\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\",\n        marginTop: 5,\n        maxWidth: 650,\n        padding: 3,\n        borderRadius: 5,\n        boxShadow: \"5px 5px 10px #ccc\",\n        sx: {\n          \":hover\": {\n            boxShadow: \"10px 10px 20px #ccc\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          padding: 3,\n          textAlign: \"center\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            marginBottom: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              name: \"username\",\n              ...register(\"username\", {\n                required: true,\n                minLength: 3\n              }),\n              variant: \"outlined\",\n              placeholder: \"Username\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Username is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), errors.username && errors.username.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Username should be at least 3 characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            marginBottom: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"email\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: true,\n                pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\n              }),\n              variant: \"outlined\",\n              placeholder: \"Email\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Email is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Email is not valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            marginBottom: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              name: \"password\",\n              ...register(\"password\", {\n                required: true,\n                minLength: 6\n              }),\n              variant: \"outlined\",\n              placeholder: \"Password\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Password is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), errors.password && errors.password.type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Password should be at least 6 characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            marginBottom: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              name: \"confirmpassword\",\n              ...register(\"confirmpassword\", {\n                required: true,\n                validate: validateConfirmPassword\n              }),\n              variant: \"outlined\",\n              placeholder: \"Confirm Password\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), errors.confirmpassword && errors.confirmpassword.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Confirm Password is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), errors.confirmpassword && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: errors.confirmpassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            marginBottom: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Contact No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"tel\",\n              name: \"contactNo\",\n              ...register(\"contactNo\", {\n                required: true,\n                pattern: /^[0-9]{10}$/\n              }),\n              variant: \"outlined\",\n              placeholder: \"Contact No\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), errors.contactNo && errors.contactNo.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Contact number is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), errors.contactNo && errors.contactNo.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Contact number should be exactly 10 digits.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          sx: {\n            marginTop: 3,\n            borderRadius: 3\n          },\n          variant: \"contained\",\n          color: \"warning\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Registration, \"lbfvUIf4A4c8a6H848/iLbTROPA=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Grid","useForm","useNavigate","jsxDEV","_jsxDEV","Registration","_s","gender","setGender","navigate","mystyle","backgroundImage","backgroundSize","minHeight","width","padding","backgroundRepeat","register","handleSubmit","formState","errors","getValues","handleGenderChange","event","target","value","validateConfirmPassword","password","registerHandler","data","alert","style","children","onSubmit","display","borderStyle","borderColor","flexDirection","alignItems","justifyContent","margin","marginTop","maxWidth","borderRadius","boxShadow","sx","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","marginBottom","item","xs","type","name","required","minLength","placeholder","fullWidth","username","className","color","pattern","email","validate","confirmpassword","message","contactNo","_c","$RefreshReg$"],"sources":["/Users/pramod/madhuri/React-Practice/react-assignment/src/Component/NavBar/Registration.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n//import { RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\n\nfunction Registration() {\n  const [gender, setGender] = useState(\"\");\n  const navigate = useNavigate();\n\n  const mystyle = {\n    backgroundImage: \"url('backgroundimg.jpg')\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    padding: \"50px\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n  } = useForm({});\n\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  const validateConfirmPassword = (value) => {\n    const { password } = getValues();\n    return value === password || \"Passwords do not match\";\n  };\n\n  const registerHandler = (data) => {\n    // Perform registration logic here (e.g., API call)\n    alert(\"Registered Successfully!!\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <div style={mystyle}>\n      <form onSubmit={handleSubmit(registerHandler)}>\n        <Box\n          display={\"flex\"}\n          borderStyle={\"solid\"}\n          borderColor={\"blue\"}\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          margin={\"auto\"}\n          marginTop={5}\n          maxWidth={650}\n          padding={3}\n          borderRadius={5}\n          boxShadow={\"5px 5px 10px #ccc\"}\n          sx={{\n            \":hover\": {\n              boxShadow: \"10px 10px 20px #ccc\",\n            },\n          }}\n        >\n          <Typography variant=\"h2\" padding={3} textAlign={\"center\"}>\n            Sign Up\n          </Typography>\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Username</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"text\"\n                name=\"username\"\n                {...register(\"username\", {\n                  required: true,\n                  minLength: 3,\n                })}\n                variant=\"outlined\"\n                placeholder=\"Username\"\n                fullWidth\n              />\n              {errors.username && errors.username.type === \"required\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Username is required.\n                </p>\n              )}\n              {errors.username && errors.username.type === \"minLength\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Username should be at least 3 characters.\n                </p>\n              )}\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Email</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"email\"\n                name=\"email\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                })}\n                variant=\"outlined\"\n                placeholder=\"Email\"\n                fullWidth\n              />\n              {errors.email && errors.email.type === \"required\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Email is required.\n                </p>\n              )}\n              {errors.email && errors.email.type === \"pattern\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Email is not valid.\n                </p>\n              )}\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Password</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"password\"\n                name=\"password\"\n                {...register(\"password\", {\n                  required: true,\n                  minLength: 6,\n                })}\n                variant=\"outlined\"\n                placeholder=\"Password\"\n                fullWidth\n              />\n              {errors.password && errors.password.type === \"required\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Password is required.\n                </p>\n              )}\n              {errors.password && errors.password.type === \"minLength\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Password should be at least 6 characters.\n                </p>\n              )}\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Confirm Password</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"password\"\n                name=\"confirmpassword\"\n                {...register(\"confirmpassword\", {\n                  required: true,\n                  validate: validateConfirmPassword,\n                })}\n                variant=\"outlined\"\n                placeholder=\"Confirm Password\"\n                fullWidth\n              />\n              {errors.confirmpassword &&\n                errors.confirmpassword.type === \"required\" && (\n                  <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                    Confirm Password is required.\n                  </p>\n                )}\n              {errors.confirmpassword && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  {errors.confirmpassword.message}\n                </p>\n              )}\n            </Grid>\n          </Grid>\n          {/* <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <FormLabel sx={{ marginBottom: 1 }}>Gender</FormLabel>\n            </Grid>\n            <Grid item xs={8}>\n              <div style={{ position: \"relative\" }}>\n                <RadioGroup\n                  row\n                  value={gender}\n                  controlId=\"gender\"\n                  onChange={handleGenderChange}\n                  sx={{ marginBottom: 0 }}\n                >\n                  <FormControlLabel\n                    value=\"female\"\n                    control={<Radio />}\n                    label=\"Female\"\n                    {...register(\"gender\", {\n                      required: \"Please select your gender\",\n                    })}\n                  />\n                  <FormControlLabel\n                    value=\"male\"\n                    control={<Radio />}\n                    label=\"Male\"\n                    {...register(\"gender\")}\n                  />\n                  <FormControlLabel\n                    value=\"other\"\n                    control={<Radio />}\n                    label=\"Other\"\n                    {...register(\"gender\")}\n                  />\n                </RadioGroup>\n                {errors.gender && (\n                  <p\n                    className=\"errorMsg\"\n                    style={{\n                      color: \"red\",\n                      position: \"absolute\",\n                      bottom: -30,\n                      left: 0,\n                    }}\n                  >\n                    {errors.gender.message}\n                  </p>\n                )}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Date of Birth</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"date\"\n                name=\"dob\"\n                {...register(\"dob\", {\n                  required: true,\n                })}\n                variant=\"outlined\"\n                fullWidth\n              />\n              {errors.dob && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Date of Birth is required.\n                </p>\n              )}\n            </Grid>\n          </Grid> */}\n\n          <Grid\n            container\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ marginBottom: 1 }}\n          >\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Contact No</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <TextField\n                type=\"tel\"\n                name=\"contactNo\"\n                {...register(\"contactNo\", {\n                  required: true,\n                  pattern: /^[0-9]{10}$/,\n                })}\n                variant=\"outlined\"\n                placeholder=\"Contact No\"\n                fullWidth\n              />\n              {errors.contactNo && errors.contactNo.type === \"required\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Contact number is required.\n                </p>\n              )}\n              {errors.contactNo && errors.contactNo.type === \"pattern\" && (\n                <p className=\"errorMsg\" style={{ color: \"red\" }}>\n                  Contact number should be exactly 10 digits.\n                </p>\n              )}\n            </Grid>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            sx={{ marginTop: 3, borderRadius: 3 }}\n            variant=\"contained\"\n            color=\"warning\"\n          >\n            Sign Up\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n}\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}